// Code generated by protoc-gen-go.
// source: person.proto
// DO NOT EDIT!

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	person.proto

It has these top-level messages:
	Person
	NameRequest
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Person_PhoneType int32

const (
	Person_MOBILE Person_PhoneType = 0
	Person_HOME   Person_PhoneType = 1
	Person_WORK   Person_PhoneType = 2
)

var Person_PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}
var Person_PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x Person_PhoneType) String() string {
	return proto.EnumName(Person_PhoneType_name, int32(x))
}
func (Person_PhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Person struct {
	Name  string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id    int32                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Email string                `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone []*Person_PhoneNumber `protobuf:"bytes,4,rep,name=phone" json:"phone,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetPhone() []*Person_PhoneNumber {
	if m != nil {
		return m.Phone
	}
	return nil
}

type Person_PhoneNumber struct {
	Number string           `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Type   Person_PhoneType `protobuf:"varint,2,opt,name=type,enum=grpc.Person_PhoneType" json:"type,omitempty"`
}

func (m *Person_PhoneNumber) Reset()                    { *m = Person_PhoneNumber{} }
func (m *Person_PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*Person_PhoneNumber) ProtoMessage()               {}
func (*Person_PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type NameRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NameRequest) Reset()                    { *m = NameRequest{} }
func (m *NameRequest) String() string            { return proto.CompactTextString(m) }
func (*NameRequest) ProtoMessage()               {}
func (*NameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Person)(nil), "grpc.Person")
	proto.RegisterType((*Person_PhoneNumber)(nil), "grpc.Person.PhoneNumber")
	proto.RegisterType((*NameRequest)(nil), "grpc.NameRequest")
	proto.RegisterEnum("grpc.Person_PhoneType", Person_PhoneType_name, Person_PhoneType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion2

// Client API for Directory service

type DirectoryClient interface {
	LookupPersonByName(ctx context.Context, in *NameRequest, opts ...grpc1.CallOption) (*Person, error)
}

type directoryClient struct {
	cc *grpc1.ClientConn
}

func NewDirectoryClient(cc *grpc1.ClientConn) DirectoryClient {
	return &directoryClient{cc}
}

func (c *directoryClient) LookupPersonByName(ctx context.Context, in *NameRequest, opts ...grpc1.CallOption) (*Person, error) {
	out := new(Person)
	err := grpc1.Invoke(ctx, "/grpc.Directory/LookupPersonByName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Directory service

type DirectoryServer interface {
	LookupPersonByName(context.Context, *NameRequest) (*Person, error)
}

func RegisterDirectoryServer(s *grpc1.Server, srv DirectoryServer) {
	s.RegisterService(&_Directory_serviceDesc, srv)
}

func _Directory_LookupPersonByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).LookupPersonByName(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Directory/LookupPersonByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).LookupPersonByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Directory_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.Directory",
	HandlerType: (*DirectoryServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "LookupPersonByName",
			Handler:    _Directory_LookupPersonByName_Handler,
		},
	},
	Streams: []grpc1.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x50, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x6c, 0xd2, 0x4d, 0x30, 0x2f, 0xa5, 0xc4, 0x87, 0x94, 0xa5, 0xa7, 0x9a, 0x53, 0x51, 0xd8,
	0x43, 0x3c, 0x78, 0x2f, 0x2d, 0x28, 0xb6, 0x4d, 0x5d, 0x04, 0xcf, 0x6d, 0x5d, 0x34, 0x68, 0xb2,
	0xeb, 0x36, 0x39, 0xe4, 0xb7, 0xfd, 0x02, 0x93, 0xdd, 0x20, 0x01, 0x7b, 0x9b, 0x37, 0x6f, 0x76,
	0xe6, 0xcd, 0xc2, 0x48, 0x09, 0x7d, 0x92, 0x05, 0x53, 0x5a, 0x96, 0x12, 0xc9, 0xbb, 0x56, 0xc7,
	0xf8, 0xc7, 0x01, 0x7f, 0x67, 0x68, 0x44, 0x20, 0xc5, 0x3e, 0x17, 0xd4, 0x99, 0x39, 0xf3, 0x80,
	0x1b, 0x8c, 0x63, 0x70, 0xb3, 0x37, 0xea, 0x36, 0x8c, 0xc7, 0x1b, 0x84, 0x57, 0xe0, 0x89, 0x7c,
	0x9f, 0x7d, 0xd1, 0xa1, 0x11, 0xd9, 0x01, 0x19, 0x78, 0xea, 0x43, 0x16, 0x82, 0x92, 0xd9, 0x70,
	0x1e, 0x26, 0x94, 0xb5, 0xd6, 0xcc, 0xda, 0xb2, 0x5d, 0xbb, 0xd9, 0x56, 0xf9, 0x41, 0x68, 0x6e,
	0x65, 0xd3, 0x67, 0x08, 0x7b, 0x2c, 0x4e, 0xc0, 0x2f, 0x0c, 0xea, 0xa2, 0xbb, 0x09, 0x6f, 0x80,
	0x94, 0xb5, 0x12, 0x26, 0x7e, 0x9c, 0x4c, 0xfe, 0xbb, 0xbe, 0x34, 0x5b, 0x6e, 0x34, 0xf1, 0x2d,
	0x04, 0x7f, 0x14, 0x02, 0xf8, 0x9b, 0x74, 0xf1, 0xb8, 0x5e, 0x45, 0x03, 0xbc, 0x00, 0xf2, 0x90,
	0x6e, 0x56, 0x91, 0xd3, 0xa2, 0xd7, 0x94, 0x3f, 0x45, 0x6e, 0x7c, 0x0d, 0xe1, 0xb6, 0x69, 0xc7,
	0xc5, 0x77, 0x25, 0x4e, 0xe5, 0xb9, 0xe2, 0xc9, 0x12, 0x82, 0x65, 0xa6, 0xc5, 0xb1, 0x94, 0xba,
	0xc6, 0x7b, 0xc0, 0xb5, 0x94, 0x9f, 0x95, 0xb2, 0xe1, 0x8b, 0xba, 0x7d, 0x8d, 0x97, 0xf6, 0xa0,
	0x9e, 0xd3, 0x74, 0xd4, 0xbf, 0x31, 0x1e, 0x1c, 0x7c, 0xf3, 0xd5, 0x77, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x78, 0xf9, 0x4c, 0x30, 0x7a, 0x01, 0x00, 0x00,
}
